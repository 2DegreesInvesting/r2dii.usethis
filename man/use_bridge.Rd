% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_bridge.R
\name{use_bridge}
\alias{use_bridge}
\title{Use a new sector-classification bridge in r2dii.data}
\usage{
use_bridge(dataset, data, contributor = NULL, issue = NULL, overwrite = FALSE)
}
\arguments{
\item{dataset}{String. Name of the dataset. This is used as the "prefix" to
for an object-name of the form \verb{[prefix]_classification}, e.g.
\code{psic_classification}.}

\item{data}{A data frame.}

\item{contributor}{String. Name of a contributor to thank in NEWS.md, e.g.
"\@daisy-pacheco".}

\item{issue}{String. Number of related issue or PR, e.g. #199.}

\item{overwrite}{Logical. Allow overwriting data?}
}
\value{
This function is called for its side effects of adding and modifying
files. It returns the first argument invisibly.
}
\description{
This is a developer-facing function that helps create the pull request you
need to add a new sector-classification bridge to the package r2dii.data
(\href{https://github.com/2DegreesInvesting/r2dii.data/pull/200}{example}). It
does create a commit but it does change your working tree: It adds new files
and modifies existing files. If the result is now what you want, you may
restore the last commit with something like \verb{git checkout . && git clean -i}.
Normally you would call this function from inside the project that contains
the source code of the package r2dii.data.
}
\examples{
\dontrun{
# Setup -------------------------------------------------------------------
# Work form inside r2dii.data
fs::dir_copy("../r2dii.data", tempdir())
tmp <- fs::path(tempdir(), "r2dii.data")
old <- getwd()
setwd(tmp)

# Call use_bridge ---------------------------------------------------------
library(r2dii.usethis)

# This is usually a contributed spreadsheet
dataset <- "fake"
data <- data.frame(
  original_code = letters[1:3],
  code_level = 5,
  code = as.character(1:3),
  sector = "not in scope",
  borderline = FALSE
)
contributor <- "@somebody"
issue <- "#123"
use_bridge(dataset, data, contributor, issue)

# Notice what changed
system("git status -s")

# Teardown ----------------------------------------------------------------
unlink(tmp, recursive = TRUE)
setwd(old)
}
}
